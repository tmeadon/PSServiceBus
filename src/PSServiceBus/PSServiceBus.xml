<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PSServiceBus</name>
    </assembly>
    <members>
        <member name="T:PSServiceBus.Cmdlets.ClearSbQueue">
            <summary>
            <para type="synopsis">Clears all messages from an Azure Service Bus queue or subscription.</para>
            <para type="description">This cmdlet clears all messages from an Azure Service Bus queue or subscription.</para>
            <para type="description">The messages will be destroyed and not outputted to the console.</para>
            </summary>
            <example>
            <code>Clear-SbQueue -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue'</code>
            <para>Clears all messages from the queue 'example-queue'</para>
            <para></para>
            </example>
            <example>
            <code>Clear-SbQueue -NamespaceConnectionString $namespaceConnectionString -TopicName 'example-topic' -SubscriptionName 'example-subscription'</code>
            <para>Clears all messages from the subscription called 'example-subscription' in the topic 'example-topic'</para>
            <para></para>
            </example>
            <example>
            <code>Clear-SbQueue -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue' -ReceiveBatchQty 200</code>
            <para>Clears all messages from the queue 'example-queue'</para>
            <para>If you have insights into the message size in the queue, you can leverage that knowledge with the -ReceiveBatchQty parameter and increase the speed of the overall purge processs.</para>
            </example>
            <example>
            <code>Clear-SbQueue -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue' -PrefetchQty 200</code>
            <para>Clears all messages from the queue 'example-queue'</para>
            <para>If you have insights into the number of messages in the queue, you can leverage that knowledge with the -PrefetchQty parameter and increase the speed of the overall purge processs.</para>
            </example>
            <example>
            <code>Clear-SbQueue -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue' -ReceiveBatchQty 200 -PrefetchQty 200</code>
            <para>Clears all messages from the queue 'example-queue'</para>
            <para>If you have insights into the number of messages and the message size in the queue, you can leverage that knowledge with the -PrefetchQty and -ReceiveBatchQty parameters and increase the speed of the overall purge processs.</para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ClearSbQueue.NamespaceConnectionString">
            <summary>
            <para type="description">A connection string with 'Manage' rights for the Azure Service Bus Namespace.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ClearSbQueue.QueueName">
            <summary>
            <para type="description">The name of the queue to retrieve messages from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ClearSbQueue.TopicName">
            <summary>
            <para type="description">The name of the topic containing the subscription to retrieve messages from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ClearSbQueue.SubscriptionName">
            <summary>
            <para type="description">The name of the subscription to retrieve messages from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ClearSbQueue.ReceiveBatchQty">
            <summary>
            <para type="description">The number of messages to retrieve in a single batch - defaults to 1. Increasing this number will increase the efficiency for the cmdlet per round trip to the service bus queue / topic and makes the purge operation faster.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ClearSbQueue.PrefetchQty">
            <summary>
            <para type="description">The number of messages to prefetch - defaults to 1. While the cmdlet is working on a batch of messages, it can utilize some caching mechanisms that will prefetch messages in a background thread. Increasing this number will increase the efficiency for the cmdlet and makes the purge operation faster.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ClearSbQueue.TimeoutInSeconds">
            <summary>
            <para type="description">The timeout in seconds before the operation should return a result - defaults to 1. The timeout value impacts the receiving logic to try and get messages back. If to low the purge operation might leave messages behind, it to high you will be waiting even when it doesn't do anything.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ClearSbQueue.DeadLetterQueue">
            <summary>
            <para type="description">Retrieves messages from the entity's dead letter queue.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ClearSbQueue.NoOutput">
            <summary>
            <para type="description">Prevents the cmdlet from outputting the queue/subscription after purge is complete</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.ClearSbQueue.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Cmdlets.GetSbQueue">
            <summary>
            <para type="synopsis">Gets a queue by name or a list of all queues from an Azure Service Bus Namespace.  Returns the number of messages in the active and dead letter queues.</para>
            <para type="description">Gets a queue by name or a list of all queues from an Azure Service Bus Namespace.  Returns the number of messages in the active and dead letter queues.</para>
            </summary>
            <example>
            <code>Get-SbQueue -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue'</code>
            <para>This gets information about a single queue called 'example-queue'.</para>
            </example>
            <example>
            <code>Get-SbQueue -NamespaceConnectionString $namespaceConnectionString</code>
            <para>This gets information about all queues.</para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.GetSbQueue.NamespaceConnectionString">
            <summary>
            <para type="description">A connection string with 'Manage' rights for the Azure Service Bus Namespace.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.GetSbQueue.QueueName">
            <summary>
            <para type="description">The name of the queue to retrieve.  All queues are returned if not specified.</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.GetSbQueue.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Cmdlets.GetSbSubscription">
            <summary>
            <para type="synopsis">Gets a subscription by name or a list of all subscriptions in an from an Azure Service Bus Topic.  Returns the number of messages in the active and dead letter queues.</para>
            <para type="description">Gets a subscription by name or a list of all subscriptions in an from an Azure Service Bus Topic.  Returns the number of messages in the active and dead letter queues.</para>
            </summary>
            <example>
            <code>Get-SbSubscription -NamespaceConnectionString $namespaceConnectionString -TopicName 'example-topic' -SubscriptionName 'example-subscription'</code>
            <para>This gets information about a single subscription called 'example-subscription' in a topic called 'example-topic'.</para>
            </example>
            <example>
            <code>Get-SbSubscription -NamespaceConnectionString $namespaceConnectionString -TopicName 'example-topic'</code>
            <para>This gets information about all subscriptions in a topic called 'example-topic'.</para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.GetSbSubscription.NamespaceConnectionString">
            <summary>
            <para type="description">A connection string with 'Manage' rights for the Azure Service Bus Namespace.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.GetSbSubscription.TopicName">
            <summary>
            <para type="description">Name of the topic to retrieve subscriptions from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.GetSbSubscription.SubscriptionName">
            <summary>
            <para type="description">Name of a specific subscription to retrieve.</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.GetSbSubscription.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Cmdlets.GetSbTopic">
            <summary>
            <para type="synopsis">Gets a topic by name or a list of all topics from an Azure Service Bus Namespace.  Returns the names of the subscriptions in the retrieved topic(s).</para>
            <para type="description">Gets a topic by name or a list of all topics from an Azure Service Bus Namespace.  Returns the names of the subscriptions in the retrieved topic(s).</para>
            </summary>
            <example>
            <code>Get-SbTopic -NamespaceConnectionString $namespaceConnectionString -TopicName 'example-topic'</code>
            <para>This gets information about a single topic called 'example-topic'.</para>
            </example>
            <example>
            <code>Get-SbTopic -NamespaceConnectionString $namespaceConnectionString</code>
            <para>This gets information about all topics.</para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.GetSbTopic.NamespaceConnectionString">
            <summary>
            <para type="description">A connection string with 'Manage' rights for the Azure Service Bus Namespace.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.GetSbTopic.TopicName">
            <summary>
            <para type="description">The name of the topic to retrieve.  All topics are returned if not specified.</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.GetSbTopic.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Cmdlets.ReceiveSbMessage">
            <summary>
            <para type="synopsis">Receives a message or messages from an Azure Service Bus queue or subscription.</para>
            <para type="description">This cmdlet retrieves a message or messages from an Azure Service Bus queue or subscription.  Two receive modes are available:</para>
            <para type="description">PeekOnly/ReceiveAndKeep (default) and ReceiveAndDelete which if specified will remove the message from the queue.  Multiple messages can be</para>
            <para type="description">received using the -NumberOfMessagesToRetrieve parameter, they will be returned individually to the pipeline.  Messages can also be</para>
            <para type="description">received from the dead letter queue by adding the -ReceiveFromDeadLetterQueue parameter.</para>
            </summary>
            <example>
            <code>Receive-SbMessage -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue'</code>
            <para>Receives a single message from the queue 'example-queue' and leaves it there</para>
            <para></para>
            </example>
            <example>
            <code>Receive-SbMessage -NamespaceConnectionString $namespaceConnectionString -TopicName 'example-topic' -SubscriptionName 'example-subscription' -NumberOfMessagesToRetrieve 5</code>
            <para>Receives 5 messages from the subscription called 'example-subscription' in the topic 'example-topic' and leaves them there</para>
            <para></para>
            </example>
            <example>
            <code>Receive-SbMessage -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue' -ReceiveType ReceiveAndDelete</code>
            <para>Receives a single message from the queue 'example-queue' and removes it from the queue</para>
            <para></para>
            </example>
            <example>
            <code>Receive-SbMessage -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue' -ReceiveFromDeadLetterQueue</code>
            <para>Receives a single message from the dead letter queue for queue 'example-queue' and leaves it there</para>
            <para></para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessage.NamespaceConnectionString">
            <summary>
            <para type="description">A connection string with 'Manage' rights for the Azure Service Bus Namespace.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessage.QueueName">
            <summary>
            <para type="description">The name of the queue to retrieve messages from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessage.TopicName">
            <summary>
            <para type="description">The name of the topic containing the subscription to retrieve messages from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessage.SubscriptionName">
            <summary>
            <para type="description">The name of the subscription to retrieve messages from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessage.NumberOfMessagesToRetrieve">
            <summary>
            <para type="description">The number of messages to retrieve - defaults to 1.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessage.ReceiveType">
            <summary>
            <para type="description">Specifies the receive behaviour - defaults to PeekOnly.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessage.ReceiveFromDeadLetterQueue">
            <summary>
            <para type="description">Retrieves messages from the entity's dead letter queue.</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.ReceiveSbMessage.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Cmdlets.ReceiveSbMessagesInBatch">
            <summary>
            <para type="synopsis">Receives messages in batch from an Azure Service Bus queue or subscription.</para>
            <para type="description">This cmdlet retrieves messages in batch from an Azure Service Bus queue or subscription. Two receive modes are available:</para>
            <para type="description">ReceiveAndKeep (default) and ReceiveAndDelete which if specified will remove the message from the queue.  Multiple messages can be</para>
            <para type="description">received using the -ReceiveQty parameter, they will be returned individually to the pipeline. Messages can also be</para>
            <para type="description">received from the dead letter queue by adding the -ReceiveFromDeadLetterQueue parameter.</para>
            </summary>
            <example>
            <code>Receive-SbMessagesInBatch -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue'</code>
            <para>Receives a single message in batch from the queue 'example-queue' and leaves it there</para>
            <para></para>
            </example>
            <example>
            <code>Receive-SbMessagesInBatch -NamespaceConnectionString $namespaceConnectionString -TopicName 'example-topic' -SubscriptionName 'example-subscription' -ReceiveQty 5</code>
            <para>Receives 5 messages in batch from the subscription called 'example-subscription' in the topic 'example-topic' and leaves them there</para>
            <para></para>
            </example>
            <example>
            <code>Receive-SbMessagesInBatch -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue' -ReceiveType ReceiveAndDelete</code>
            <para>Receives a single message in batch from the queue 'example-queue' and removes it from the queue</para>
            <para></para>
            </example>
            <example>
            <code>Receive-SbMessagesInBatch -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue' -ReceiveFromDeadLetterQueue</code>
            <para>Receives a single message in batch from the dead letter queue for queue 'example-queue' and leaves it there</para>
            <para></para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessagesInBatch.NamespaceConnectionString">
            <summary>
            <para type="description">A connection string with 'Manage' rights for the Azure Service Bus Namespace.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessagesInBatch.QueueName">
            <summary>
            <para type="description">The name of the queue to retrieve messages from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessagesInBatch.TopicName">
            <summary>
            <para type="description">The name of the topic containing the subscription to retrieve messages from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessagesInBatch.SubscriptionName">
            <summary>
            <para type="description">The name of the subscription to retrieve messages from.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessagesInBatch.ReceiveQty">
            <summary>
            <para type="description">The number of messages to retrieve - defaults to 1.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessagesInBatch.ReceiveType">
            <summary>
            <para type="description">Specifies the receive behaviour - defaults to ReceiveAndKeep.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.ReceiveSbMessagesInBatch.ReceiveFromDeadLetterQueue">
            <summary>
            <para type="description">Retrieves messages from the entity's dead letter queue.</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.ReceiveSbMessagesInBatch.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Cmdlets.SendSbMessage">
            <summary>
            <para type="synopsis">Sends a message to an Azure Service Bus queue or topic.</para>
            <para type="description">Sends a message to an Azure Service Bus queue or topic.</para>
            </summary>
            <example>
            <code>Send-SbMessage -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue'  -Message '{ "example": "message" }'</code>
            <para>This sends a message to the queue 'example-queue' with body '{ "example": "message" }'.</para>
            </example>
            <example>
            <code>Send-SbMessage -NamespaceConnectionString $namespaceConnectionString -TopicName 'example-topic'  -Message '{ "example": "message" }'</code>
            <para>This sends a message to the topic 'example-topic' with body '{ "example": "message" }'.</para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.SendSbMessage.NamespaceConnectionString">
            <summary>
            <para type="description">A connection string with 'Manage' rights for the Azure Service Bus Namespace.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.SendSbMessage.QueueName">
            <summary>
            <para type="description">Name of the queue to send a message to.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.SendSbMessage.TopicName">
            <summary>
            <para type="description">Name of the topic to send a message to.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.SendSbMessage.Message">
            <summary>
            <para type="description">Body of the message to send.</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.SendSbMessage.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Cmdlets.SendSbMessagesInBatch">
            <summary>
            <para type="synopsis">Sends a set of messages to an Azure Service Bus queue or topic.</para>
            <para type="description">Sends a set of messages to an Azure Service Bus queue or topic.</para>
            </summary>
            <example>
            <code>Send-SbMessagesInBatch -NamespaceConnectionString $namespaceConnectionString -QueueName 'example-queue' -Messages '{ "example": "message1" }','{ "example": "message2" }'</code>
            <para>This sends a set of messages to the queue 'example-queue' with body '{ "example": "message1" }','{ "example": "message2" }'.</para>
            </example>
            <example>
            <code>Send-SbMessagesInBatch -NamespaceConnectionString $namespaceConnectionString -TopicName 'example-topic' -Messages '{ "example": "message1" }','{ "example": "message2" }'</code>
            <para>This sends a set of messages to the topic 'example-topic' with body '{ "example": "message1" }','{ "example": "message2" }'.</para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.SendSbMessagesInBatch.NamespaceConnectionString">
            <summary>
            <para type="description">A connection string with 'Manage' rights for the Azure Service Bus Namespace.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.SendSbMessagesInBatch.QueueName">
            <summary>
            <para type="description">Name of the queue to send a message to.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.SendSbMessagesInBatch.TopicName">
            <summary>
            <para type="description">Name of the topic to send a message to.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.SendSbMessagesInBatch.Messages">
            <summary>
            <para type="description">Set of the messages to send.</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.SendSbMessagesInBatch.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Cmdlets.TestSbConnectionString">
            <summary>
            <para type="synopsis">Tests whether a connection string is valid or not.</para>
            <para type="description">Tests whether a connection string is valid or not.</para>
            </summary>
            <example>
            <code>Test-SbConnectionString -NamespaceConnectionString $namespaceConnectionString</code>
            <para>This tests whether $namespaceConnectionString is valid or not.</para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.TestSbConnectionString.NamespaceConnectionString">
            <summary>
            <para type="description">Connection string to test.</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.TestSbConnectionString.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Cmdlets.TestSbMessageBatchSize">
            <summary>
            <para type="synopsis">Tests whether a message batch is valid for a range of different namespace skus</para>
            <para type="description">The different Service Bus Namespaces skus have different limits for the maximum message or message batch size.</para>
            <para type="description">This cmdlet tests whether a given message batch is valid for the different skus.  If the -NamespaceConnectionString</para>
            <para type="description">parameter is supplied then the batch is also evaluated against the in-scope namespace.</para>
            </summary>
            <example>
            <code>Test-SbMessageBatchSize -Messages $messagesToSend -NamespaceConnectionString $namespaceConnectionString</code>
            <para>This tests whether the message batch $messagesToSend is within the contsraints of the various namespace skus, including</para>
            <para>the namespace $namespaceConnectionString.</para>
            </example>
        </member>
        <member name="P:PSServiceBus.Cmdlets.TestSbMessageBatchSize.NamespaceConnectionString">
            <summary>
            <para type="description">A connection string with 'Manage' rights for the Azure Service Bus Namespace.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Cmdlets.TestSbMessageBatchSize.Messages">
            <summary>
            <para type="description">Batch of messages to be tested</para>
            </summary>
        </member>
        <member name="M:PSServiceBus.Cmdlets.TestSbMessageBatchSize.ProcessRecord">
            <summary>
            Main cmdlet method.
            </summary>
        </member>
        <member name="T:PSServiceBus.Enums.SbBatchTestResults">
            <summary>
            Valid reasons for the message batch test to fail
            </summary>
        </member>
        <member name="F:PSServiceBus.Enums.SbBatchTestResults.BatchWithinLimits">
            <summary>
            No failure
            </summary>
        </member>
        <member name="F:PSServiceBus.Enums.SbBatchTestResults.BatchTooLarge">
            <summary>
            Batch is over the size limit
            </summary>
        </member>
        <member name="T:PSServiceBus.Enums.SbEntityTypes">
            <summary>
            Valid Service Bus entities
            </summary>
        </member>
        <member name="F:PSServiceBus.Enums.SbEntityTypes.Queue">
            <summary>
            A Service Bus Queue
            </summary>
        </member>
        <member name="F:PSServiceBus.Enums.SbEntityTypes.Topic">
            <summary>
            A Service Bus Topic
            </summary>
        </member>
        <member name="F:PSServiceBus.Enums.SbEntityTypes.Subscription">
            <summary>
            A Service Bus Subscription
            </summary>
        </member>
        <member name="T:PSServiceBus.Enums.SbReceiveTypes">
            <summary>
            <para type="description">Valid ways to receive a message from a Service Bus entity</para>
            </summary>
        </member>
        <member name="F:PSServiceBus.Enums.SbReceiveTypes.ReceiveAndDelete">
            <summary>
            Removes the message from the entity after receiving
            </summary>
        </member>
        <member name="F:PSServiceBus.Enums.SbReceiveTypes.ReceiveAndKeep">
            <summary>
            Just like PeekOnly, it leaves the message in the entity after receiving
            </summary>
        </member>
        <member name="F:PSServiceBus.Enums.SbReceiveTypes.PeekOnly">
            <summary>
            Uses the Peek feature and leaves the message in the entity after receiving
            </summary>
        </member>
        <member name="T:PSServiceBus.Exceptions.NonExistentEntityException">
            <summary>
            Tells the user that the Service Bus entity doesn't exist
            </summary>
        </member>
        <member name="M:PSServiceBus.Exceptions.NonExistentEntityException.#ctor">
            <summary>
            Basic constructor
            </summary>
        </member>
        <member name="M:PSServiceBus.Exceptions.NonExistentEntityException.#ctor(System.String)">
            <summary>
            This constructor allows control of the exception message
            </summary>
            <param name="message">Message to insert into the exception</param>
        </member>
        <member name="T:PSServiceBus.Helpers.ISbManager">
            <summary></summary>
        </member>
        <member name="T:PSServiceBus.Helpers.SbManager">
            <summary></summary>
        </member>
        <member name="T:PSServiceBus.Helpers.SbReceiver">
            <summary></summary>
        </member>
        <member name="T:PSServiceBus.Helpers.SbSender">
            <summary></summary>
        </member>
        <member name="T:PSServiceBus.Outputs.SbMessage">
            <summary>
            Contains the id and the body for a service bus message
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessage.MessageId">
            <summary>
            Message ID
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessage.MessageBody">
            <summary>
            Message body
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessage.SystemProperties">
            <summary>
            System Properties
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessage.UserProperties">
            <summary>
            User Properties
            </summary>
        </member>
        <member name="T:PSServiceBus.Outputs.SbMessageBatchTestResult">
            <summary>
            Contains the result of a message batch test
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessageBatchTestResult.BatchSize">
            <summary>
            Size of the batch
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessageBatchTestResult.NumberOfMessages">
            <summary>
            Number of messages in the batch
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessageBatchTestResult.ValidForBasicSku">
            <summary>
            Whether or not the batch is within the constraints of the 'basic' Service Bus Namespace sku
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessageBatchTestResult.ValidForStandardSku">
            <summary>
            Whether or not the batch is within the constraints of the 'basic' Service Bus Namespace sku
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessageBatchTestResult.ValidForPremiumSku">
            <summary>
            Whether or not the batch is within the constraints of the 'premium' Service Bus Namespace sku
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessageBatchTestResult.CurrentNamespaceSku">
            <summary>
            Sku of the in-scope namespace
            </summary>
        </member>
        <member name="F:PSServiceBus.Outputs.SbMessageBatchTestResult.ValidForCurrentNamespace">
            <summary>
            Whether or not the batch is within the contstraints of the in-scope namespace
            </summary>
        </member>
        <member name="T:PSServiceBus.Outputs.SbMessageBatchTestResult.SkuValidityOutput">
            <summary>
            Sub-object for the sku validity members
            </summary>
        </member>
        <member name="T:PSServiceBus.Outputs.SbQueue">
            <summary>
            <para type="description">Contains the name of a queue and the number of messages in the 'active' and 'dead letter' queues.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.Name">
            <summary>
            Name of the queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.ActiveMessages">
            <summary>
            Number of messages in the active queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.DeadLetteredMessages">
            <summary>
            Number of messages in the dead letter queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.ScheduledMessageCount">
            <summary>
            Number of messages in the scheduled queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.DefaultMessageTtlInDays">
            <summary>
            Length of the default message time to live for the queue in days
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.LockDuration">
            <summary>
            A timespan representing the queue's lock duration
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.DuplicateDetectionHistoryTimeWindow">
            <summary>
            A timespan representing the duplicate detection history time window
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.MaxDeliveryCount">
            <summary>
            The number of times the queue will attempt to deliver a message before it is dead-lettered
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.EnableBatchedOperations">
            <summary>
            A bool that shows if batched operations are enabled or not on the queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.MaxSizeInMB">
            <summary>
            The maximum size (in MB) for the queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.CurrentSizeInMB">
            <summary>
            The current size (in MB) of the queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.PercentageCapacityFree">
            <summary>
            The percentage of the queue's capacity currently available
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbQueue.Status">
            <summary>
            The status of the queue
            </summary>
        </member>
        <member name="T:PSServiceBus.Outputs.SbSubscription">
            <summary>
            <para type="description">Contains the name of a subscription, the name of the containing topic, and the number of messages in the 'active' and 'dead letter' queues.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbSubscription.Name">
            <summary>
            Name of the subscription
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbSubscription.Topic">
            <summary>
            Name of the topic
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbSubscription.ActiveMessages">
            <summary>
            Number of messages in the active queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbSubscription.DeadLetteredMessages">
            <summary>
            Number of messages in the dead letter queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbSubscription.DefaultMessageTtlInDays">
            <summary>
            Length of the default message time to live for the queue in days
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbSubscription.LockDuration">
            <summary>
            A timespan representing the queue's lock duration
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbSubscription.MaxDeliveryCount">
            <summary>
            The number of times the queue will attempt to deliver a message before it is dead-lettered
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbSubscription.EnableBatchedOperations">
            <summary>
            A bool that shows if batched operations are enabled or not on the queue
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbSubscription.Status">
            <summary>
            The status of the queue
            </summary>
        </member>
        <member name="T:PSServiceBus.Outputs.SbTopic">
            <summary>
            <para type="description">Contains the name of a topic and a list of its subscriptions.</para>
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbTopic.TopicName">
            <summary>
            Name of the topic
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbTopic.Subscriptions">
            <summary>
            List of subscriptions in the topic
            </summary>
        </member>
        <member name="P:PSServiceBus.Outputs.SbTopic.ScheduledMessages">
            <summary>
            Number of messages in the scheduled queue
            </summary>
        </member>
    </members>
</doc>
